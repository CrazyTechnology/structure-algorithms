3.1 线性表list：零个或多个数据元素的有限序列
	线性表元素的个数n（n>=0）定义为线性表的长度，当n=0时，称为空表
3.3 线性表的抽象数据类型
	List
	操作：
		InitList():初始化操作，建立一个空的线性表
		ListEmpty():若线性表为空，返回true，否则返回false
		ClearList():将线性表清空
		GetElem():返回元素
		insert():插入
		delete():删除
		length():长度
3.4顺序存储：用一段地址连续的存储单元依次存储线性表的数据元素
	数据长度：数组的长度，分配后这个变量一般不变

	线性表的长度：是线性表中数据元素的个数，这个量是随着插入和删除改变的。

	线性表的长度应该小于等于数组的长度
	
	地址计算方法：LOC(ai)=LOC(a1)+(i+1)*c
3.5 顺序存储的优缺点
	优点：无须为表示元素之间的逻辑关系而增加额外的存储空间，可以快速的存取表中任意位置的元素
	缺点：插入和删除操作需要移动大量元素，当线性表长度变化较大时难以确定存储空间的容量，造成存储空间的“碎片”
3.6链表中第一个结点的存储位置叫做头指针
	头指针和头结点的异同：
		头指针式指链表指向第一个结点的指针，若链表有头结点，则是指向头结点的指针。头指针具有标识作用，所以常用头指针冠以链表的名字。无论链表是否为空，头指针均不为空。头指针式链表的必要元素
		头结点是为了操作的统一和方便而设立的，放在第一个元素的结点之前，其数据一般无意义。有了头结点，对在第一元素结点前插入和结点和删除第一结点，其操作和其他结点的操作就统一了。头结点不一定是链表的必须要素。